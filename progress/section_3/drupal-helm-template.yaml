---
# Source: drupal/charts/mariadb/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mysite-mariadb
  namespace: default
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-9.5.1
    app.kubernetes.io/instance: mysite
    app.kubernetes.io/managed-by: Helm
  annotations:
---
# Source: drupal/charts/mariadb/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mysite-mariadb
  namespace: default
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-9.5.1
    app.kubernetes.io/instance: mysite
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  mariadb-root-password: "SzRLb3gzMWpWdw=="
  mariadb-password: "MFd3VVpDWVA2Rg=="
---
# Source: drupal/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mysite-drupal
  labels:
    app.kubernetes.io/name: drupal
    helm.sh/chart: drupal-10.2.36
    app.kubernetes.io/instance: mysite
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  drupal-password: "UGFzc3dvcmQxIQ=="
---
# Source: drupal/charts/mariadb/templates/primary/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysite-mariadb
  namespace: default
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-9.5.1
    app.kubernetes.io/instance: mysite
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
data:
  my.cnf: |-
    [mysqld]
    skip-name-resolve
    explicit_defaults_for_timestamp
    basedir=/opt/bitnami/mariadb
    plugin_dir=/opt/bitnami/mariadb/plugin
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    tmpdir=/opt/bitnami/mariadb/tmp
    max_allowed_packet=16M
    bind-address=0.0.0.0
    pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
    log-error=/opt/bitnami/mariadb/logs/mysqld.log
    character-set-server=UTF8
    collation-server=utf8_general_ci
    
    [client]
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    default-character-set=UTF8
    plugin_dir=/opt/bitnami/mariadb/plugin
    
    [manager]
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
---
# custom pv
kind: PersistentVolume
apiVersion: v1
metadata:
  name: mysite-drupal-pv-1
  labels:
      type: local
spec:
  capacity:
    storage: 8Gi
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  hostPath:
    path: "/apps/rke/data"

kind: PersistentVolume
apiVersion: v1
metadata:
  name: mysite-drupal-pv-2
  labels:
      type: local
spec:
  capacity:
    storage: 25Gi
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  hostPath:
    path: "/apps/rke/data-2"
---
# Source: drupal/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: mysite-drupal-drupal
  labels:
    app.kubernetes.io/name: drupal
    helm.sh/chart: drupal-10.2.36
    app.kubernetes.io/instance: mysite
    app.kubernetes.io/managed-by: Helm
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "8Gi"
---
# Source: drupal/charts/mariadb/templates/primary/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: mysite-mariadb
  namespace: default
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-9.5.1
    app.kubernetes.io/instance: mysite
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
  annotations:
spec:
  type: ClusterIP
  ports:
    - name: mysql
      port: 3306
      protocol: TCP
      targetPort: mysql
      nodePort: null
  selector: 
    app.kubernetes.io/name: mariadb
    app.kubernetes.io/instance: mysite
    app.kubernetes.io/component: primary
---
# Source: drupal/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: mysite-drupal
  labels:
    app.kubernetes.io/name: drupal
    helm.sh/chart: drupal-10.2.36
    app.kubernetes.io/instance: mysite
    app.kubernetes.io/managed-by: Helm
spec:
  type: LoadBalancer
  sessionAffinity: None
  externalTrafficPolicy: "Cluster"
  ports:
    - name: http
      port: 80
      targetPort: http
    - name: https
      port: 443
      targetPort: https
  selector:
    app.kubernetes.io/name: drupal
    app.kubernetes.io/instance: mysite
---
# Source: drupal/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysite-drupal
  labels:
    app.kubernetes.io/name: drupal
    helm.sh/chart: drupal-10.2.36
    app.kubernetes.io/instance: mysite
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: drupal
      app.kubernetes.io/instance: mysite
  strategy:
    type: RollingUpdate
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: drupal
        helm.sh/chart: drupal-10.2.36
        app.kubernetes.io/instance: mysite
        app.kubernetes.io/managed-by: Helm
      annotations:
        prometheus.io/port: "9117"
        prometheus.io/scrape: "true"
    spec:
      
      securityContext:
        fsGroup: 0
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: drupal
                    app.kubernetes.io/instance: mysite
                namespaces:
                  - "default"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      # yamllint disable rule:indentation
      hostAliases:
        - hostnames:
          - status.localhost
          ip: 127.0.0.1
      # yamllint enable rule:indentation
      containers:
        - name: mysite-drupal
          image: docker.io/bitnami/drupal:9.2.6-debian-10-r0
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsUser: 0
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: ALLOW_EMPTY_PASSWORD
              value: "yes"
            - name: APACHE_HTTP_PORT_NUMBER
              value: "8080"
            - name: APACHE_HTTPS_PORT_NUMBER
              value: "8443"
            - name: DRUPAL_DATABASE_HOST
              value: "mysite-mariadb"
            - name: DRUPAL_DATABASE_PORT_NUMBER
              value: "3306"
            - name: DRUPAL_DATABASE_NAME
              value: "bitnami_drupal"
            - name: DRUPAL_DATABASE_USER
              value: "bn_drupal"
            - name: DRUPAL_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysite-mariadb
                  key: "mariadb-password"
            - name: DRUPAL_SKIP_BOOTSTRAP
              value: "no"
            - name: DRUPAL_PROFILE
              value: "standard"
            - name: DRUPAL_USERNAME
              value: "admin"
            - name: DRUPAL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysite-drupal
                  key: drupal-password
            - name: DRUPAL_EMAIL
              value: "briancollins081@gmail.com"
          envFrom:
          ports:
            - name: http
              containerPort: 8080
            - name: https
              containerPort: 8443
          livenessProbe:
            httpGet:
              path: /user/login
              port: http
            initialDelaySeconds: 600
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /user/login
              port: http
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 5
          resources:
            requests:
              cpu: 300m
              memory: 512Mi
          volumeMounts:
            - name: drupal-data
              mountPath: /bitnami/drupal
      volumes:
        - name: drupal-data
          persistentVolumeClaim:
            claimName: mysite-drupal-drupal
---
# Source: drupal/charts/mariadb/templates/primary/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysite-mariadb
  namespace: default
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-9.5.1
    app.kubernetes.io/instance: mysite
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels: 
      app.kubernetes.io/name: mariadb
      app.kubernetes.io/instance: mysite
      app.kubernetes.io/component: primary
  serviceName: mysite-mariadb
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/configuration: fa11dfec977ccb5ab4d29582c8d0f99178dbc1ed743be2444c20413956b1e49d
      labels:
        app.kubernetes.io/name: mariadb
        helm.sh/chart: mariadb-9.5.1
        app.kubernetes.io/instance: mysite
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: primary
    spec:
      
      serviceAccountName: mysite-mariadb
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: mariadb
                    app.kubernetes.io/instance: mysite
                    app.kubernetes.io/component: primary
                namespaces:
                  - "default"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 0
      # initContainers:
      # - name: mariadb-create-directory-structure
      #   image: busybox
      #   command:
      #     [
      #       "sh",
      #       "-c",
      #       "/bin/mkdir -p /bitnami/mariadb/data && /bin/chmod -R 777 /bitnami/mariadb",
      #     ]
      #   volumeMounts:
      #   - name: mariadb-data
      #     mountPath: /bitnami
      containers:
        - name: mariadb
          image: docker.io/bitnami/mariadb:10.5.12-debian-10-r32
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsUser: 0
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: MARIADB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysite-mariadb
                  key: mariadb-root-password
            - name: MARIADB_USER
              value: "bn_drupal"
            - name: MARIADB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysite-mariadb
                  key: mariadb-password
            - name: MARIADB_DATABASE
              value: "bitnami_drupal"
          ports:
            - name: mysql
              containerPort: 3306
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MARIADB_ROOT_PASSWORD:-}"
                  if [[ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MARIADB_ROOT_PASSWORD_FILE")
                  fi
                  mysqladmin status -uroot -p"${password_aux}"
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MARIADB_ROOT_PASSWORD:-}"
                  if [[ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MARIADB_ROOT_PASSWORD_FILE")
                  fi
                  mysqladmin status -uroot -p"${password_aux}"
          resources: 
            limits: {}
            requests: {}
          volumeMounts:
            - name: data
              mountPath: /bitnami/mariadb
            - name: config
              mountPath: /opt/bitnami/mariadb/conf/my.cnf
              subPath: my.cnf
      volumes:
        - name: config
          configMap:
            name: mysite-mariadb
  volumeClaimTemplates:
    - metadata:
        name: data
        labels: 
          app.kubernetes.io/name: mariadb
          app.kubernetes.io/instance: mysite
          app.kubernetes.io/component: primary
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"

